
Перем ВыводитьДетальныеСообщения;

Процедура ОбработатьЭлементыСтилейНаСервере(Знач ПутьККонфигурацииXML, ВыводДетальныхСообщений=0) Экспорт
	
	ВыводитьДетальныеСообщения = ВыводДетальныхСообщений;

	ФайлыЭлементовСтилей = НайтиФайлы(ПутьККонфигурацииXML + "\StyleItems", "*.xml"); 
	ДанныеПоискаИЗамены = ПолучитьДанныеДляПоискаИЗаменыЧтениеXML(ФайлыЭлементовСтилей);	
	
	ИсходныеФайлыПоискаИЗамены = НайтиФайлы(ПутьККонфигурацииXML + "", "*.xml", Истина);
	
	ЗаменитьЭлементыСтилейВФайлахПроекта(ИсходныеФайлыПоискаИЗамены, ДанныеПоискаИЗамены);
	
КонецПроцедуры

Функция ПолучитьДанныеДляПоискаИЗаменыЧтениеXML(МассивФайловЭлементовСтилей)
	
	ДанныеПоискаИЗамены = Новый Массив;
	
	Для каждого ФайлЭлементаСтиля Из МассивФайловЭлементовСтилей Цикл
		
		ЧтениеXML = Новый ЧтениеXML();
		ЧтениеXML.ОткрытьФайл(ФайлЭлементаСтиля.ПолноеИмя);
		
		ТекущийЭлементСтиля = "";
		ИдентификаторЭлементаСтиля = "";
		ИмяЭлементаСтиля = "";
		
		Пока ЧтениеXML.Прочитать() Цикл
				
			// Сообщить(ЧтениеXML.КодировкаИсточника);
			// Сообщить(ЧтениеXML.КодировкаXML);

			Если ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда 
				
				Пока ЧтениеXML.ПрочитатьАтрибут() Цикл
					
					Если НРег(ЧтениеXML.Имя) = "uuid" Тогда
						ИдентификаторЭлементаСтиля = ЧтениеXML.Значение;		
					КонецЕсли;	
					
				КонецЦикла;
				
				Если ЗначениеЗаполнено(ЧтениеXML.Имя) Тогда
					ТекущийЭлементСтиля = ЧтениеXML.Имя;
				КонецЕсли;
				
			ИначеЕсли ЧтениеXML.ТипУзла=ТипУзлаXML.Текст Тогда
				
				Если НРег(ТекущийЭлементСтиля) = "name" Тогда
					ИмяЭлементаСтиля = ЧтениеXML.Значение;		
				КонецЕсли;
				
			КонецЕсли ;
			
			Если ЗначениеЗаполнено(ИдентификаторЭлементаСтиля) И ЗначениеЗаполнено(ИмяЭлементаСтиля) Тогда
				Прервать;
			КонецЕсли;
			
		КонецЦикла;

		Если ЗначениеЗаполнено(ИдентификаторЭлементаСтиля) И ЗначениеЗаполнено(ИмяЭлементаСтиля) Тогда
			ДанныеПоискаИЗамены.Добавить(Новый Структура("ИдентификаторЭлементаСтиля, ИмяЭлементаСтиля", ИдентификаторЭлементаСтиля, ИмяЭлементаСтиля)); 
		КонецЕсли;
		
		//Прервать;
		
	КонецЦикла;
	
	Возврат ДанныеПоискаИЗамены;
	 
КонецФункции

Функция ЗаменитьЭлементыСтилейВФайлахПроекта(ИсходныеФайлыПоискаИЗамены, ДанныеПоискаИЗамены)
	
	Для каждого ИсходныйФайлПоискаИЗамены Из ИсходныеФайлыПоискаИЗамены Цикл
		
		Если НРег(ИсходныйФайлПоискаИЗамены.ИмяБезРасширения) = "template" 
				Или НРег(ИсходныйФайлПоискаИЗамены.ИмяБезРасширения) = "form" Тогда
			
			Если ВыводитьДетальныеСообщения = 1 Тогда
				Сообщить("Обработка файла: "  + ИсходныйФайлПоискаИЗамены.ПолноеИмя);
			КонецЕсли;

			Попытка
			
				ТекстовыйДокумент = Новый ТекстовыйДокумент;
				ТекстовыйДокумент.Прочитать(ИсходныйФайлПоискаИЗамены.ПолноеИмя, "UTF-8");
				ТекстовыйДокументТекст = ТекстовыйДокумент.ПолучитьТекст();
				
				Для каждого ПараметрыПоискаИЗамены Из ДанныеПоискаИЗамены Цикл
					ТекстовыйДокументТекст = СтрЗаменить(ТекстовыйДокументТекст, 
												"style:" + ПараметрыПоискаИЗамены.ИмяЭлементаСтиля, 
												"0:" + ПараметрыПоискаИЗамены.ИдентификаторЭлементаСтиля);
				КонецЦикла;
				
				ТекстовыйДокумент.УстановитьТекст(ТекстовыйДокументТекст);
				ТекстовыйДокумент.Записать(ИсходныйФайлПоискаИЗамены.ПолноеИмя, "UTF-8");				

			Исключение
				
				Сообщить("Не удалось обработать : " + ОписаниеОшибки());

			КонецПопытки;
		
		КонецЕсли;		
		
	КонецЦикла;
	
	Сообщить("Замена элементов стилей выполнена!");

КонецФункции
